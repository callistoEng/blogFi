[33mcommit 3904d3937e8d539c2005a43d68c9e8e4e61a6b47[m
Author: callistoEng <caliowino97@gmail.com>
Date:   Fri Jan 26 13:42:27 2024 +0300

    first commit of NextNews combo app

[1mdiff --git a/.gitignore b/.gitignore[m
[1mnew file mode 100644[m
[1mindex 0000000..833c6ab[m
[1m--- /dev/null[m
[1m+++ b/.gitignore[m
[36m@@ -0,0 +1,174 @@[m
[32m+[m[32m# Created by https://www.toptal.com/developers/gitignore/api/django[m
[32m+[m[32m# Edit at https://www.toptal.com/developers/gitignore?templates=django[m
[32m+[m
[32m+[m[32m### Django ###[m
[32m+[m[32m*.log[m
[32m+[m[32m*.pot[m
[32m+[m[32m*.pyc[m
[32m+[m[32m__pycache__/[m
[32m+[m[32mlocal_settings.py[m
[32m+[m[32mdb.sqlite3[m
[32m+[m[32mdb.sqlite3-journal[m
[32m+[m[32mmedia[m
[32m+[m[32mstatic[m
[32m+[m[32m# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/[m
[32m+[m[32m# in your Git repository. Update and uncomment the following line accordingly.[m
[32m+[m[32m# <django-project-name>/staticfiles/[m
[32m+[m
[32m+[m[32m### Django.Python Stack ###[m
[32m+[m[32m# Byte-compiled / optimized / DLL files[m
[32m+[m[32m*.py[cod][m
[32m+[m[32m*$py.class[m
[32m+[m
[32m+[m[32m# C extensions[m
[32m+[m[32m*.so[m
[32m+[m
[32m+[m[32m# Distribution / packaging[m
[32m+[m[32m.Python[m
[32m+[m[32mbuild/[m
[32m+[m[32mdevelop-eggs/[m
[32m+[m[32mdist/[m
[32m+[m[32mdownloads/[m
[32m+[m[32meggs/[m
[32m+[m[32m.eggs/[m
[32m+[m[32mlib/[m
[32m+[m[32mlib64/[m
[32m+[m[32mparts/[m
[32m+[m[32msdist/[m
[32m+[m[32mvar/[m
[32m+[m[32mwheels/[m
[32m+[m[32mshare/python-wheels/[m
[32m+[m[32m*.egg-info/[m
[32m+[m[32m.installed.cfg[m
[32m+[m[32m*.egg[m
[32m+[m[32mMANIFEST[m
[32m+[m
[32m+[m[32m# PyInstaller[m
[32m+[m[32m#  Usually these files are written by a python script from a template[m
[32m+[m[32m#  before PyInstaller builds the exe, so as to inject date/other infos into it.[m
[32m+[m[32m*.manifest[m
[32m+[m[32m*.spec[m
[32m+[m
[32m+[m[32m# Installer logs[m
[32m+[m[32mpip-log.txt[m
[32m+[m[32mpip-delete-this-directory.txt[m
[32m+[m
[32m+[m[32m# Unit test / coverage reports[m
[32m+[m[32mhtmlcov/[m
[32m+[m[32m.tox/[m
[32m+[m[32m.nox/[m
[32m+[m[32m.coverage[m
[32m+[m[32m.coverage.*[m
[32m+[m[32m.cache[m
[32m+[m[32mnosetests.xml[m
[32m+[m[32mcoverage.xml[m
[32m+[m[32m*.cover[m
[32m+[m[32m*.py,cover[m
[32m+[m[32m.hypothesis/[m
[32m+[m[32m.pytest_cache/[m
[32m+[m[32mcover/[m
[32m+[m
[32m+[m[32m# Translations[m
[32m+[m[32m*.mo[m
[32m+[m
[32m+[m[32m# Django stuff:[m
[32m+[m
[32m+[m[32m# Flask stuff:[m
[32m+[m[32minstance/[m
[32m+[m[32m.webassets-cache[m
[32m+[m
[32m+[m[32m# Scrapy stuff:[m
[32m+[m[32m.scrapy[m
[32m+[m
[32m+[m[32m# Sphinx documentation[m
[32m+[m[32mdocs/_build/[m
[32m+[m
[32m+[m[32m# PyBuilder[m
[32m+[m[32m.pybuilder/[m
[32m+[m[32mtarget/[m
[32m+[m
[32m+[m[32m# Jupyter Notebook[m
[32m+[m[32m.ipynb_checkpoints[m
[32m+[m
[32m+[m[32m# IPython[m
[32m+[m[32mprofile_default/[m
[32m+[m[32mipython_config.py[m
[32m+[m
[32m+[m[32m# pyenv[m
[32m+[m[32m#   For a library or package, you might want to ignore these files since the code is[m
[32m+[m[32m#   intended to run in multiple environments; otherwise, check them in:[m
[32m+[m[32m# .python-version[m
[32m+[m
[32m+[m[32m# pipenv[m
[32m+[m[32m#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.[m
[32m+[m[32m#   However, in case of collaboration, if having platform-specific dependencies or dependencies[m
[32m+[m[32m#   having no cross-platform support, pipenv may install dependencies that don't work, or not[m
[32m+[m[32m#   install all needed dependencies.[m
[32m+[m[32m#Pipfile.lock[m
[32m+[m
[32m+[m[32m# poetry[m
[32m+[m[32m#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.[m
[32m+[m[32m#   This is especially recommended for binary packages to ensure reproducibility, and is more[m
[32m+[m[32m#   commonly ignored for libraries.[m
[32m+[m[32m#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control[m
[32m+[m[32m#poetry.lock[m
[32m+[m
[32m+[m[32m# pdm[m
[32m+[m[32m#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.[m
[32m+[m[32m#pdm.lock[m
[32m+[m[32m#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it[m
[32m+[m[32m#   in version control.[m
[32m+[m[32m#   https://pdm.fming.dev/#use-with-ide[m
[32m+[m[32m.pdm.toml[m
[32m+[m
[32m+[m[32m# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm[m
[32m+[m[32m__pypackages__/[m
[32m+[m
[32m+[m[32m# Celery stuff[m
[32m+[m[32mcelerybeat-schedule[m
[32m+[m[32mcelerybeat.pid[m
[32m+[m
[32m+[m[32m# SageMath parsed files[m
[32m+[m[32m*.sage.py[m
[32m+[m
[32m+[m[32m# Environments[m
[32m+[m[32m.env[m
[32m+[m[32m.venv[m
[32m+[m[32menv/[m
[32m+[m[32mvenv/[m
[32m+[m[32mENV/[m
[32m+[m[32menv.bak/[m
[32m+[m[32mvenv.bak/[m
[32m+[m
[32m+[m[32m# Spyder project settings[m
[32m+[m[32m.spyderproject[m
[32m+[m[32m.spyproject[m
[32m+[m
[32m+[m[32m# Rope project settings[m
[32m+[m[32m.ropeproject[m
[32m+[m
[32m+[m[32m# mkdocs documentation[m
[32m+[m[32m/site[m
[32m+[m
[32m+[m[32m# mypy[m
[32m+[m[32m.mypy_cache/[m
[32m+[m[32m.dmypy.json[m
[32m+[m[32mdmypy.json[m
[32m+[m
[32m+[m[32m# Pyre type checker[m
[32m+[m[32m.pyre/[m
[32m+[m
[32m+[m[32m# pytype static type analyzer[m
[32m+[m[32m.pytype/[m
[32m+[m
[32m+[m[32m# Cython debug symbols[m
[32m+[m[32mcython_debug/[m
[32m+[m
[32m+[m[32m# PyCharm[m
[32m+[m[32m#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can[m
[32m+[m[32m#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore[m
[32m+[m[32m#  and can be added to the global gitignore or merged into this file.  For a more nuclear[m
[32m+[m[32m#  option (not recommended) you can uncomment the following to ignore the entire idea folder.[m
[32m+[m[32m#.idea/[m
[32m+[m
[32m+[m[32m# End of https://www.toptal.com/developers/gitignore/api/django[m
\ No newline at end of file[m
[1mdiff --git a/content/__init__.py b/content/__init__.py[m
[1mnew file mode 100644[m
[1mindex 0000000..e69de29[m
[1mdiff --git a/content/admin.py b/content/admin.py[m
[1mnew file mode 100644[m
[1mindex 0000000..c494f09[m
[1m--- /dev/null[m
[1m+++ b/content/admin.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.contrib import admin[m
[32m+[m[32mfrom .models import Content, Comments, ContentCategories[m
[32m+[m
[32m+[m[32madmin.site.register(ContentCategories)[m
[32m+[m[32madmin.site.register(Comments)[m
[32m+[m[32madmin.site.register(Content)[m
[1mdiff --git a/content/apps.py b/content/apps.py[m
[1mnew file mode 100644[m
[1mindex 0000000..273d169[m
[1m--- /dev/null[m
[1m+++ b/content/apps.py[m
[36m@@ -0,0 +1,6 @@[m
[32m+[m[32mfrom django.apps import AppConfig[m
[32m+[m
[32m+[m
[32m+[m[32mclass ContentConfig(AppConfig):[m
[32m+[m[32m    default_auto_field = 'django.db.models.BigAutoField'[m
[32m+[m[32m    name = 'content'[m
[1mdiff --git a/content/migrations/0001_initial.py b/content/migrations/0001_initial.py[m
[1mnew file mode 100644[m
[1mindex 0000000..57f3f87[m
[1m--- /dev/null[m
[1m+++ b/content/migrations/0001_initial.py[m
[36m@@ -0,0 +1,84 @@[m
[32m+[m[32m# Generated by Django 5.0.1 on 2024-01-23 12:47[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mimport django.utils.timezone[m
[32m+[m[32mimport django_ckeditor_5.fields[m
[32m+[m[32mfrom django.conf import settings[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    initial = True[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        migrations.swappable_dependency(settings.AUTH_USER_MODEL),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='ContentCategories',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('category_name', models.CharField(max_length=250)),[m
[32m+[m[32m                ('slug', models.SlugField(blank=True, null=True, unique=True)),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'verbose_name': 'Content Categories',[m
[32m+[m[32m                'verbose_name_plural': 'Content Categories',[m
[32m+[m[32m                'ordering': ['-id'],[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Content',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('title', models.CharField(db_index=True, max_length=250)),[m
[32m+[m[32m                ('overview', models.CharField(db_index=True, max_length=250)),[m
[32m+[m[32m                ('created_on', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),[m
[32m+[m[32m                ('views', models.PositiveIntegerField(blank=True, default=0, null=True)),[m
[32m+[m[32m                ('updated_on', models.DateTimeField(auto_now_add=True, db_index=True)),[m
[32m+[m[32m                ('content', django_ckeditor_5.fields.CKEditor5Field()),[m
[32m+[m[32m                ('is_published', models.BooleanField(default=False)),[m
[32m+[m[32m                ('Location', models.CharField(blank=True, db_index=True, default='Kenya', max_length=100, null=True)),[m
[32m+[m[32m                ('thumbnail', models.ImageField(blank=True, null=True, upload_to='Images/contentImages/')),[m
[32m+[m[32m                ('slug', models.SlugField(blank=True, max_length=250, unique=True)),[m
[32m+[m[32m                ('content_owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m                ('next_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='next', to='content.content')),[m
[32m+[m[32m                ('previous_post', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='previous', to='content.content')),[m
[32m+[m[32m                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='content.contentcategories')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'verbose_name': 'Content',[m
[32m+[m[32m                'verbose_name_plural': 'Content',[m
[32m+[m[32m                'ordering': ['-created_on'],[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Comments',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('timestamp', models.DateTimeField(auto_now_add=True)),[m
[32m+[m[32m                ('content', models.TextField(max_length=30)),[m
[32m+[m[32m                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='content.content')),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'verbose_name': 'Comments',[m
[32m+[m[32m                'verbose_name_plural': 'Comments',[m
[32m+[m[32m                'get_latest_by': 'timestamp',[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='PostFiles',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('file_name', models.CharField(blank=True, db_index=True, max_length=80, null=True)),[m
[32m+[m[32m                ('file', models.ImageField(upload_to='ckfiles/%Y/%m/%d/')),[m
[32m+[m[32m                ('file_owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),[m
[32m+[m[32m            ],[m
[32m+[m[32m            options={[m
[32m+[m[32m                'ordering': ['-id'],[m
[32m+[m[32m            },[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/content/migrations/0002_tags_content_post_tag.py b/content/migrations/0002_tags_content_post_tag.py[m
[1mnew file mode 100644[m
[1mindex 0000000..34e1762[m
[1m--- /dev/null[m
[1m+++ b/content/migrations/0002_tags_content_post_tag.py[m
[36m@@ -0,0 +1,26 @@[m
[32m+[m[32m# Generated by Django 5.0.1 on 2024-01-25 07:56[m
[32m+[m
[32m+[m[32mimport django.db.models.deletion[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('content', '0001_initial'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.CreateModel([m
[32m+[m[32m            name='Tags',[m
[32m+[m[32m            fields=[[m
[32m+[m[32m                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),[m
[32m+[m[32m                ('tag', models.CharField(max_length=30)),[m
[32m+[m[32m            ],[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='content',[m
[32m+[m[32m            name='post_tag',[m
[32m+[m[32m            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='post_tags', to='content.tags'),[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/content/migrations/0003_remove_comments_content_comments_content_comment.py b/content/migrations/0003_remove_comments_content_comments_content_comment.py[m
[1mnew file mode 100644[m
[1mindex 0000000..6da8738[m
[1m--- /dev/null[m
[1m+++ b/content/migrations/0003_remove_comments_content_comments_content_comment.py[m
[36m@@ -0,0 +1,23 @@[m
[32m+[m[32m# Generated by Django 5.0.1 on 2024-01-25 08:23[m
[32m+[m
[32m+[m[32mfrom django.db import migrations, models[m
[32m+[m
[32m+[m
[32m+[m[32mclass Migration(migrations.Migration):[m
[32m+[m
[32m+[m[32m    dependencies = [[m
[32m+[m[32m        ('content', '0002_tags_content_post_tag'),[m
[32m+[m[32m    ][m
[32m+[m
[32m+[m[32m    operations = [[m
[32m+[m[32m        migrations.RemoveField([m
[32m+[m[32m            model_name='comments',[m
[32m+[m[32m            name='content',[m
[32m+[m[32m        ),[m
[32m+[m[32m        migrations.AddField([m
[32m+[m[32m            model_name='comments',[m
[32m+[m[32m            name='content_comment',[m
[32m+[m[32m            field=models.TextField(default='hey', max_length=80),[m
[32m+[m[32m            preserve_default=False,[m
[32m+[m[32m        ),[m
[32m+[m[32m    ][m
[1mdiff --git a/content/migrations/__i